
C:\Users\Andy\ProjectRoom\projects\laravel_membership> php artisan migrate:make create_posts_table --create="posts"

___

C:\Users\Andy\ProjectRoom\projects\laravel_membership> php artisan migrate:make create_users_table --create="users"


___

Schema::create('posts', function(Blueprint $table)
{
    $table->increments('id');
    $table->string('title');
    $table->longText('content');
    $table->boolean("is_premium");
    $table->timestamps();
});

___


Schema::create('users', function(Blueprint $table)
{
    $table->increments('id');
    $table->string('email', 100)->unique();
    $table->string('password', 60);
	$table->string('remember_token');
    $table->timestamps();
});

___

C:\Users\Andy\ProjectRoom\projects\laravel_membership> composer require laravel/cashier:1.*

___


After that we need to tell our app to load the Cashier service provider class. We can do that by adding "Laravel\Cashier\CashierServiceProvider" to the providers array on the config/app.php file.

Note: You must run composer dump-autoload to update the classMap package.
___


php artisan cashier:table users




vagrant@homestead:~/projects/laravel_membership$ php artisan migrate

Generate the `Test secret Key` in the User Account>Settings

we then need to copy this key into our application

	'stripe' => array(
		'model'  => 'User',
		'secret' => 'sk_test_dr6TV2CNwEjDw3KnPR9sxkDz',
	),

	
From the Signup Page

```html
@extends("masters.default")

@section("content")

@if( $errors->any() )
    <div class="alert alert-danger">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
        {{ implode("", $errors->all('<p>:message</p>') ) }}
    </div>
@endif

<div id="signupbox" style="margin-top:50px" class="mainbox mainbox col-md-8 col-md-offset-2 col-sm-8 col-sm-offset-2">
    <div class="panel panel-info">
        <div class="panel-heading">
            <div class="panel-title">Sign Up</div>

            <div style="float:right; font-size: 85%; position: relative; top:-10px">
                {{ HTML::link( '/login', 'Login' ) }}
            </div>
        </div>  
        <div class="panel-body" >
            {{ Form::open( [ 'route' => 'signup.store', 'class' => 'form-horizontal', 'role' => 'form', 'id' => 'subscription-form' ] )}}
                <div class="payment-errors"></div>
                <div id="signupalert" style="display:none" class="alert alert-danger">
                    <p>Error:</p>
                    <span></span>
                </div>

                <div class="form-group">
                    {{ Form::label( 'subscription', 'Subscription plan', [ 'class' => 'col-md-3 control-label' ])}}
                    <div class="col-md-9">
                        {{ Form::select( 'subscription' , [ 'basic' => '(BASIC) £9.99 per year', 'premium' => '(PREMIUM) £19.99 per year' ], 'premium', [ 'class' => 'form-control' ])}}
                    </div>
                </div>

                <div class="form-group">
                    {{ Form::label( 'email', 'Email', [ 'class' => 'col-md-3 control-label' ])}}
                    <div class="col-md-9">
                        {{ Form::email('email', '', [ 'class' => 'form-control', 'placeholder' => 'Email address' ])}}
                    </div>
                </div>

                <div class="form-group">
                    {{ Form::label( 'password', 'Password', [ 'class' => 'col-md-3 control-label' ])}}
                    <div class="col-md-9">
                        {{ Form::password('password', [ 'class' => 'form-control', 'placeholder' => 'Password' ])}}
                    </div>
                </div>

                <div class="form-group">
                    {{ Form::label( 'password_confirmation', 'Re-type Password', [ 'class' => 'col-md-3 control-label' ])}}
                    <div class="col-md-9">
                        {{ Form::password('password_confirmation', [ 'class' => 'form-control', 'placeholder' => 'Re-type Password' ])}}
                    </div>
                </div>
                
                <div class="divider"></div>
                
                <div class="form-group">
                    {{ Form::label( 'ccn', 'Credit card number', [ 'class' => 'col-md-3 control-label' ])}}
                    <div class="col-md-9">
                        {{ Form::text('ccn', '', [ 'class' => 'form-control', 'data-stripe' => 'number' ])}}
                    </div>
                </div>
                
                <div class="form-group">
                    {{ Form::label( 'expiration', 'Expiration date', [ 'class' => 'col-md-3 control-label' ])}}
                    <div class="col-md-6">
                        {{ Form::selectMonth('month', 'junuary', [ 'class' => 'form-control', 'data-stripe' => 'exp-month' ])}}
                    </div>
                    <div class="col-md-3">
                        {{ Form::selectRange('year', 2014, 2029, 2014, [ 'class' => 'form-control', 'data-stripe' => 'exp-year' ])}}
                    </div>
                </div>

                <div class="form-group">
                    {{ Form::label( 'cvc', 'CVC number', [ 'class' => 'col-md-3 control-label' ])}}
                    <div class="col-md-3">
                        {{ Form::text('cvc', '', [ 'class' => 'form-control', 'data-stripe' => 'cvc' ])}}
                    </div>
                </div>

                <div class="form-group">
                    <!-- Button -->                                        
                    <div class="col-md-offset-3 col-md-9">
                        {{ Form::button('<i class="glyphicon glyphicon-hand-right"></i> &nbsp Sign Up', [ 'type' => 'submit', 'id'  => 'btn-signup', 'class' => 'btn btn-info'] ) }}
                    </div>
                </div>
            {{ Form::close() }}
         </div> <!-- Panel body -->
    </div> <!-- Panel -->
 </div> <!-- Signup box -->

<script type="text/javascript" src="https://js.stripe.com/v2/"></script>

<script>
    Stripe.setPublishableKey('STRIPE_PUBLISHABLE_API_KEY');
    jQuery(function($) {
        $('#subscription-form').submit(function(event) {
            var $form = $(this);

            // Disable the submit button to prevent repeated clicks
            $form.find('button').prop('disabled', true);

            Stripe.card.createToken($form, stripeResponseHandler);

            // Prevent the form from submitting with the default action
            return false;
        });
    });

    var stripeResponseHandler = function(status, response) {
        var $form = $('#subscription-form');

        if (response.error) {
            // Show the errors on the form
            $form.find('.payment-errors').text(response.error.message);
            $form.find('button').prop('disabled', false);
        } else {
            // token contains id, last4, and card type
            var token = response.id;
            // Insert the token into the form so it gets submitted to the server
            $form.append($('<input type="hidden" name="stripeToken" />').val(token));
            // and submit
            $form.get(0).submit();
        }
    };
</script>
@stop
```

* Note that we are using the 'button' here, therefore instead of using `{{ Form::submit('Submit') }}` we are instead using `{{ Form::button }}` with `'type' => 'submit'`.  This is because the JS needs to interact with the Button element.

* Note that we must also submit the `STRIPE_PUBLISHABLE_API_KEY` into the JS code above


___



```html

<!-- Button -->  
<div class="form-group">
	<div class="col-md-offset-3 col-md-9">
		{{ Form::button('<i class="glyphicon glyphicon-hand-right"></i> &nbsp Sign Up', [ 'type' => 'submit', 'id'  => 'btn-signup', 'class' => 'btn btn-info'] ) }}
    </div>
</div>

___

When using Stripe we need to add HTML5 attributes to the input elements.

```html
<div class="form-group">
                    {{ Form::label( 'ccn', 'Credit card number', [ 'class' => 'col-md-3 control-label' ])}}
    <div class="col-md-9">
        {{ Form::text('ccn', '', [ 'class' => 'form-control', 'data-stripe' => 'number' ])}}
    </div>
</div>
```

Credit card number
'data-stripe' => 'number'

Credit card expiry month
'data-stripe' => 'exp-month'

Credit card expiry year
'data-stripe' => 'exp-year'

CVC number
'data-stripe' => 'cvc'

___
		
// app/routes.php

<?php

/*
|--------------------------------------------------------------------------
| Application Routes
|--------------------------------------------------------------------------
|
| Here is where you can register all of the routes for an application.
| It's a breeze. Simply tell Laravel the URIs it should respond to
| and give it the Closure to execute when that URI is requested.
|
*/

//Auth::loginUsingId(1);

Route::get('/', function()
{
    $posts = Post::all();

	return View::make('index', [ 'posts' => $posts ]);
})->before('auth');


Route::get('/post/{id}', [ 'as' => 'post', 'uses' => 'PostsController@show' ])->before('auth');
Route::resource('login', 'LoginController', [ 'only' => [ 'index', 'store', 'destroy' ] ]);
Route::resource('signup', 'SignupController', [ 'only' => [ 'index', 'store' ] ]);
Route::resource('upgrade', 'UpgradeController', [ 'only' => [ 'index', 'store' ] ]);

?>

___


// app/controllers/LoginController.php

<?php 

class LoginController extends BaseController{

    public function index(){
        if( Auth::check() )
            return Redirect::to("/");
        return View::make('login');
    }

    public function store(){
        if( Auth::attempt( Input::only( ['email', 'password'] ), true)){
            return Redirect::to('/');
        }
        else{
            
            return Redirect::back()->withInput()->with( 'message', 'Email or password incorrect' );
        }
    }

    public function destroy()
    {
        Auth::logout();
        return Redirect::route("login");
    }
}

___

// app/controllers/SignupController

<?php

class SignupController extends BaseController{

    public function index( ){
        if( Auth::check() )
            return Redirect::to("/");

        return View::make('signup');
    }

    public function store(){
        $user = new User;
        $user->email = Input::get('email');
        $user->password = Hash::make( Input::get('password') );
        $user->save();
        $user->subscription(Input::get('subscription'))->create(Input::get('stripeToken'));

        return 'you are now registered';
    }

}

___

// app/controllers/UpgradeController.php

<?php

class UpgradeController extends BaseController{

    public function index(){
        return View::make('upgrade');
    }

    public function store(){
        if( !Auth::check() )
            return Redirect::route("login");

        Auth::user()->subscription('premium')->swap();

        return 'You are now a PREMIUM member';
    }
}

___


// app/models/User.php

<?php
use Laravel\Cashier\BillableInterface;
use Laravel\Cashier\BillableTrait;
use Illuminate\Auth\UserInterface;
class User extends Eloquent implements UserInterface, BillableInterface {

    use BillableTrait,\Illuminate\Auth\UserTrait;
    /**
     * The database table used by the model.
     *
     * @var string
     */
    protected $table = 'users';
    
    protected $fillable = ['email','password'];
    /**
     * The attributes excluded from the model's JSON form.
     *
     * @var array
     */
    protected $hidden = array('password');
    /**
     * Get the unique identifier for the user.
     *
     * @return mixed
     */
    public function getAuthIdentifier()
    {
        return $this->getKey();
    }
    /**
     * Get the password for the user.
     *
     * @return string
     */
    public function getAuthPassword()
    {
        return $this->password;
    }
    /**
     * Get the e-mail address where password reminders are sent.
     *
     * @return string
     */
    public function getReminderEmail()
    {
        return $this->email;
    }
}

___

// app/models/Post.php

<?php
class Post extends Eloquent {
    
    protected $table = 'posts';
    
    protected $fillable = [ 'title', 'content', 'is_premium' ];
}

___
